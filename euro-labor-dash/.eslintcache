[{"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\index.tsx":"1","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\reportWebVitals.ts":"2","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\App.tsx":"3","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\DashContainer.tsx":"4","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\ControlPanel.tsx":"5","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\services\\URLgenerationFunctions.tsx":"6","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Earnings.tsx":"7","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Vacancies.tsx":"8","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Unemployment.tsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":234,"mtime":1607705143385,"results":"13","hashOfConfig":"11"},{"size":3755,"mtime":1614624000242,"results":"14","hashOfConfig":"11"},{"size":621,"mtime":1610980120750,"results":"15","hashOfConfig":"11"},{"size":1581,"mtime":1614624000253,"results":"16","hashOfConfig":"11"},{"size":5044,"mtime":1614624000243,"results":"17","hashOfConfig":"11"},{"size":482,"mtime":1611060204392,"results":"18","hashOfConfig":"11"},{"size":27,"mtime":1614624000244,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ofp5zp",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"41","usedDeprecatedRules":"22"},"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\index.tsx",[],["42","43"],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\reportWebVitals.ts",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\App.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\DashContainer.tsx",["44","45","46"],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\ControlPanel.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\services\\URLgenerationFunctions.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Earnings.tsx",["47"],"import React, { useEffect, useState } from \"react\";\r\nimport { scaleLinear, max, min, mean, select } from \"d3\";\r\nimport { create } from \"domain\";\r\n\r\nconst animateBars = (rectRef: any, y_net: number, barHeight_net: number) => {\r\n  const rect = select(rectRef.current);\r\n\r\n  rect\r\n\r\n    .transition()\r\n    .duration(1000)\r\n    .attr(\"height\", barHeight_net)\r\n    .attr(\"y\", y_net);\r\n};\r\n\r\ninterface BarProps {\r\n  x: number;\r\n  y_net: number;\r\n  barWidth: number;\r\n  barHeight_net: number;\r\n  yValue: number;\r\n  yearLabel: any;\r\n  yearLableYPoz: number;\r\n}\r\n\r\nconst Bar: React.FC<BarProps> = ({\r\n  x,\r\n  y_net,\r\n  barWidth,\r\n  barHeight_net,\r\n  yValue,\r\n  yearLabel,\r\n  yearLableYPoz,\r\n}) => {\r\n  if (isNaN(y_net)) {\r\n    y_net = 0;\r\n  }\r\n\r\n  const axisText: number = 125;\r\n  const rectRef: any = React.createRef();\r\n\r\n  useEffect(() => {\r\n    animateBars(rectRef, y_net, barHeight_net);\r\n  });\r\n\r\n  return (\r\n    <g>\r\n      <rect ref={rectRef} x={x} width={barWidth} fill=\"black\" />\r\n      <text\r\n        x={x}\r\n        y={yearLableYPoz}\r\n        // style={{transform:'rotate(1deg)'}}\r\n      >\r\n        {yearLabel}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\ninterface EarningsProps {\r\n  children?: any;\r\n  selectedCountry?: string;\r\n  netEarningsData: any;\r\n\r\n  isFetching: boolean;\r\n}\r\n\r\nconst Earnings: React.FC<EarningsProps> = ({\r\n  netEarningsData: netEarningsData,\r\n  selectedCountry,\r\n  isFetching,\r\n}) => {\r\n  const barAreaHeight = 400;\r\n  const barAreaWidth = 700;\r\n  const margin = { top: 30, right: 70, bottom: 10, left: 50 };\r\n  const barChartHeight = barAreaHeight - margin.bottom;\r\n\r\n  const barDimensions = {\r\n    barWidth: 12,\r\n    barSideMargin: 0.2,\r\n    centerToCenter: 40,\r\n    labelMarginTop: 2,\r\n  };\r\n\r\n  let labels: Array<any> = [];\r\n  let values_net: Array<Number> = [1, 2, 3];\r\n  let yScale_net: any;\r\n  let yAxisValues :Array<Number> = [];\r\n\r\n\r\n  let bars: any = <rect></rect>;\r\n\r\n  function generateYaxisValues(ar :Number[]){\r\n    const point1  = min(ar)\r\n    const point5 = max(ar)\r\n    const point3 = mean([point1, point5])\r\n    const point2 = mean([point1, point3])\r\n    const point4 =  mean([point5, point3])\r\n    let rez  = [point5, point4, point3, point2, point1]\r\n\r\n    return rez.map((el :any)=>Math.round(el))\r\n  }\r\n\r\n\r\n  values_net = netEarningsData.values;\r\n  if (values_net !== undefined) {\r\n    labels = netEarningsData.labels.map((year: any) => parseInt(year));\r\n  }\r\n\r\n  if (min(labels) < 2005 && values_net !== undefined) {\r\n    const elementsToSlice = 2005 - min(labels);\r\n    labels = labels.slice(elementsToSlice);\r\n    values_net = values_net.slice(elementsToSlice);\r\n  }\r\n\r\n  if (min(labels) > 2005 && values_net !== undefined) {\r\n    const minYear = min(labels);\r\n    const elementsToAdd: number = minYear - 2005;\r\n\r\n    for (let i = 0; i < elementsToAdd; i++) {\r\n      labels.unshift(labels[0] - 1);\r\n      values_net.unshift(0);\r\n    }\r\n\r\n    values_net = values_net.slice(elementsToAdd);\r\n  }\r\n\r\n\r\n\r\n  if (values_net !== undefined) {\r\n    yScale_net = scaleLinear()\r\n      .domain([min(values_net) as number, max(values_net) as number])\r\n      .range([margin.bottom, barAreaHeight - margin.top]);\r\n  } else {\r\n    //used as a placeholder when waiting for values to arrive\r\n    yScale_net = scaleLinear().domain([0, 100]).range([5, barChartHeight]);\r\n  }\r\n\r\n  const xScale = scaleLinear()\r\n    .domain([min(labels) as number, max(labels) as number])\r\n    .range([margin.left, barAreaWidth]);\r\n\r\n  if (values_net !== undefined) {\r\n    values_net  =values_net.map((el :any)=>Math.round(el))\r\n\r\n    yAxisValues = generateYaxisValues(values_net)\r\n    console.log(yAxisValues)\r\n\r\n\r\n\r\n    bars = values_net.map((row: any, ind: number) => (\r\n      <Bar\r\n        x={ind * barDimensions.centerToCenter + margin.left}\r\n        y_net={\r\n          values_net === undefined || values_net.length === 0\r\n            ? 0\r\n            : barChartHeight - yScale_net(values_net[ind])-10\r\n        }\r\n        barWidth={barDimensions.barWidth}\r\n        barHeight_net={\r\n          values_net === undefined || values_net.length === 0\r\n            ? 0\r\n            : yScale_net(values_net[ind])\r\n        }\r\n        yValue={0}\r\n        key={ind}\r\n        yearLabel={labels[ind]}\r\n        yearLableYPoz={barChartHeight + margin.bottom}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <div>{JSON.stringify(netEarningsData)}</div> */}\r\n\r\n      <div>{`${selectedCountry} Net Earnings`}</div>\r\n\r\n      <div style={{ backgroundColor: \"grey\", height: 400, width: 700 }}>\r\n        <svg width={barAreaWidth} height={barAreaHeight}>\r\n          {yAxisValues.map(el=>(\r\n            <text key={`yaxis ${el}`} x={5} y={barAreaHeight-yScale_net(el)}>{el}</text>\r\n          ))}\r\n          <line\r\n            id=\"xAxis\"\r\n            x1={margin.left}\r\n            y1={barChartHeight - margin.bottom}\r\n            x2={barAreaWidth - margin.right}\r\n            y2={barChartHeight - margin.bottom}\r\n            stroke=\"black\"\r\n          />\r\n\r\n          {bars}\r\n        </svg>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Earnings;\r\n","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Vacancies.tsx",["48","49","50","51","52","53","54","55","56"],"import React, { useEffect, useState } from \"react\";\r\nimport { scaleLinear, max, min, mean, select } from \"d3\";\r\nimport { create } from \"domain\";\r\n\r\n\r\ninterface VacancyProps{\r\n\r\n    selectedCountry?: string;\r\n    vacancyData: any;\r\n    isFetching: boolean;\r\n}\r\n\r\n\r\n\r\n\r\nconst Vacancies: React.FC<VacancyProps>=({\r\n    vacancyData: vacancyData, \r\n    selectedCountry, \r\n    isFetching\r\n\r\n\r\n}) =>{\r\n\r\n    return  <div>{JSON.stringify(vacancyData)}</div>\r\n}\r\n\r\n\r\nexport default Vacancies","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Unemployment.tsx",["57"],"import React, { useEffect, useState } from \"react\";\r\nimport Dotz from \"../components/graphComponents/Dotz\";\r\nimport Linez from \"../components/graphComponents/Line\";\r\n\r\nimport {\r\n  chartDimensions,\r\n  yScale_imported,\r\n  xScaleAnnual,\r\n  generateYAxisFull,\r\n  generateXaxisFull,\r\n  consistentArrayLengths,\r\n} from \"../services/graphUtilityFunctions\";\r\n\r\ninterface UnemploymentProps {\r\n  selectedCountry?: string;\r\n  unemploymentData: any;\r\n  isFetching: boolean;\r\n}\r\n\r\nconst Unemployment: React.FC<UnemploymentProps> = ({\r\n  unemploymentData: unemploymentData,\r\n  isFetching,\r\n}) => {\r\n  let labels: Array<any> | any = [1, 2, 3];\r\n  let values_unemp: Array<number> = [];\r\n  let yAxis: any;\r\n  let xAxis: any;\r\n  let xAxisLine: any;\r\n  let lineComponent: any;\r\n  let values_unempScaled: any;\r\n  let dots: any;\r\n\r\n  const useMousePoz = () => {\r\n    const [mousePoz, setMousePoz] = useState({ mouseX: 0, mouseY: 0 });\r\n\r\n    const updateMousePoz = (ev: any) => {\r\n      setMousePoz({ mouseX: ev.clientX, mouseY: ev.clientY });\r\n    };\r\n\r\n    useEffect(() => {\r\n      window.addEventListener(\"mousemove\", updateMousePoz);\r\n\r\n      return () => window.removeEventListener(\"mousemove\", updateMousePoz);\r\n    }, []);\r\n    return mousePoz;\r\n  };\r\n\r\n  const { mouseX, mouseY } = useMousePoz();\r\n\r\n  \r\n  labels = unemploymentData.labels;\r\n  values_unemp = unemploymentData.values;\r\n  \r\n\r\n  if(Array.isArray(values_unemp)) {\r\n\r\nlabels = consistentArrayLengths(labels, values_unemp)[0]\r\nvalues_unemp = consistentArrayLengths(labels, values_unemp)[1]\r\n  }\r\n\r\n  if (Array.isArray(values_unemp)) {\r\n\r\n\r\n    values_unempScaled = values_unemp.map((el) =>\r\n      yScale_imported(values_unemp, el)\r\n    );\r\n    const labelsScaled = values_unemp.map((el, ind) => xScaleAnnual(ind));\r\n\r\n\r\n    yAxis = generateYAxisFull(values_unempScaled);\r\n    xAxis = generateXaxisFull(labels);\r\n\r\n    lineComponent = (\r\n      <Linez valuesScaled={values_unempScaled} labelsScaled={labelsScaled} />\r\n    );\r\n\r\n    dots = (\r\n      <Dotz\r\n        valuesRaw={values_unemp}\r\n        valuesScaled={values_unempScaled}\r\n        labels={labels}\r\n        mouseX={mouseX}\r\n        mouseY={mouseY}\r\n        isFetching={isFetching}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <div>{JSON.stringify(unemploymentData)}</div> */}\r\n\r\n      <div style={{ backgroundColor: \"grey\", height: 400, width: 700 }}>\r\n        <svg\r\n          width={chartDimensions.chartAreaWidth}\r\n          height={chartDimensions.chartAreaHeight}\r\n        >\r\n          {dots}\r\n          {lineComponent}\r\n          {yAxis}\r\n          {xAxis}\r\n          {xAxisLine}\r\n        </svg>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Unemployment;\r\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":81,"column":6,"nodeType":"64","endLine":81,"endColumn":8,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"63","line":86,"column":6,"nodeType":"64","endLine":86,"endColumn":23,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":99,"column":9,"nodeType":"69","messageId":"70","endLine":99,"endColumn":12},{"ruleId":"71","severity":1,"message":"72","line":21,"column":3,"nodeType":"73","messageId":"74","endLine":21,"endColumn":35,"fix":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":17,"nodeType":"69","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"79","line":1,"column":28,"nodeType":"69","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"80","line":2,"column":10,"nodeType":"69","messageId":"78","endLine":2,"endColumn":21},{"ruleId":"76","severity":1,"message":"81","line":2,"column":23,"nodeType":"69","messageId":"78","endLine":2,"endColumn":26},{"ruleId":"76","severity":1,"message":"82","line":2,"column":28,"nodeType":"69","messageId":"78","endLine":2,"endColumn":31},{"ruleId":"76","severity":1,"message":"83","line":2,"column":33,"nodeType":"69","messageId":"78","endLine":2,"endColumn":37},{"ruleId":"76","severity":1,"message":"84","line":2,"column":39,"nodeType":"69","messageId":"78","endLine":2,"endColumn":45},{"ruleId":"76","severity":1,"message":"85","line":3,"column":10,"nodeType":"69","messageId":"78","endLine":3,"endColumn":16},{"ruleId":"71","severity":1,"message":"86","line":17,"column":5,"nodeType":"73","messageId":"74","endLine":17,"endColumn":29,"fix":"87"},{"ruleId":"71","severity":1,"message":"88","line":21,"column":3,"nodeType":"73","messageId":"74","endLine":21,"endColumn":37,"fix":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchData' and 'fetchData_vacancies'. Either include them or remove the dependency array.","ArrayExpression",["92"],["93"],"@typescript-eslint/no-redeclare","'rez' is already defined.","Identifier","redeclared","no-useless-rename","Destructuring assignment netEarningsData unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"94","text":"95"},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","unusedVar","'useState' is defined but never used.","'scaleLinear' is defined but never used.","'max' is defined but never used.","'min' is defined but never used.","'mean' is defined but never used.","'select' is defined but never used.","'create' is defined but never used.","Destructuring assignment vacancyData unnecessarily renamed.",{"range":"96","text":"97"},"Destructuring assignment unemploymentData unnecessarily renamed.",{"range":"98","text":"99"},"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},[507,539],"netEarningsData",[316,340],"vacancyData",[524,558],"unemploymentData","Update the dependencies array to be: [fetchData, fetchData_vacancies]",{"range":"104","text":"105"},"Update the dependencies array to be: [fetchData, fetchData_vacancies, selectedCountry]",{"range":"106","text":"107"},[1960,1962],"[fetchData, fetchData_vacancies]",[2040,2057],"[fetchData, fetchData_vacancies, selectedCountry]"]