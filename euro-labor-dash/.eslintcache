[{"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\index.tsx":"1","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\reportWebVitals.ts":"2","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\App.tsx":"3","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\DashContainer.tsx":"4","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\ControlPanel.tsx":"5","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\services\\URLgenerationFunctions.tsx":"6","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Earnings.tsx":"7","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Vacancies.tsx":"8","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Unemployment.tsx":"9","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Line.tsx":"10","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\services\\graphUtilityFunctions.tsx":"11","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Bar.tsx":"12","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Dot.tsx":"13","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\HoverTable.tsx":"14","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\HoverTableRow.tsx":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":234,"mtime":1607705143385,"results":"19","hashOfConfig":"17"},{"size":5635,"mtime":1614785196570,"results":"20","hashOfConfig":"17"},{"size":621,"mtime":1610980120750,"results":"21","hashOfConfig":"17"},{"size":1536,"mtime":1614703120697,"results":"22","hashOfConfig":"17"},{"size":2647,"mtime":1614872670907,"results":"23","hashOfConfig":"17"},{"size":2521,"mtime":1614782891760,"results":"24","hashOfConfig":"17"},{"size":2962,"mtime":1614872670912,"results":"25","hashOfConfig":"17"},{"size":1716,"mtime":1614872670914,"results":"26","hashOfConfig":"17"},{"size":6273,"mtime":1614872670914,"results":"27","hashOfConfig":"17"},{"size":1447,"mtime":1614872670913,"results":"28","hashOfConfig":"17"},{"size":1853,"mtime":1614703120778,"results":"29","hashOfConfig":"17"},{"size":2894,"mtime":1614872670909,"results":"30","hashOfConfig":"17"},{"size":3881,"mtime":1614872670911,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ofp5zp",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\index.tsx",[],["68","69"],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\reportWebVitals.ts",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\App.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\DashContainer.tsx",["70","71","72","73"],"import React, { useState, useEffect } from \"react\";\r\nimport ControlPanel from \"./ControlPanel\";\r\nimport {\r\n  generateFetchURL_net,\r\n  generateFetchURL_vacancies,\r\n  generateFetchURL_unemployemnt,\r\n} from \"../services/URLgenerationFunctions\";\r\nimport Earnings from \"./Earnings\";\r\nimport Unemployment from \"./Unemployment\";\r\nimport Vacancies from \"./Vacancies\";\r\n// import HoverTable from \"./HoverTable\"\r\nimport HoverTable from \"./HoverTable\";\r\nimport {chartDimensions} from \"../services/graphUtilityFunctions\"\r\n\r\n// import HoverTable from 'c:/Users/Admin/Documents/js/react/euro-labor-dash/euro-labor-dash/src/components/HoverTable'\r\n\r\nconst DashContainer: React.FC = () => {\r\n  const [selectedCountry, setSelectedCountry] = useState<string>(\"Euro area\");\r\n  const [netEarningsData, setNetEarningsData] = useState({\r\n    data: {},\r\n    isFetching: false,\r\n    status: \"\",\r\n  });\r\n  const [unemploymentData, setUnemploymentData] = useState({\r\n    data: {},\r\n    isFetching: false,\r\n    status: \"\",\r\n  });\r\n  const [vacanciesData, setVacanciesData] = useState({\r\n    data: {},\r\n    isFetching: false,\r\n    status: \"\",\r\n  });\r\n\r\n  function fetchData_net() {\r\n    const fetchURL_net: string = generateFetchURL_net(selectedCountry);\r\n\r\n    netEarningsData.isFetching = true;\r\n\r\n    fetch(fetchURL_net)\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        setNetEarningsData({\r\n          data: returnLabelsAndValues(res),\r\n          isFetching: false,\r\n          status: \"\",\r\n        })\r\n      )\r\n      .catch((error: string) =>\r\n        setNetEarningsData({ data: {}, isFetching: false, status: error })\r\n      );\r\n  }\r\n  function fetchData_unemployemnt() {\r\n    const fetchURL_unemployment: string = generateFetchURL_unemployemnt(\r\n      selectedCountry\r\n    );\r\n\r\n    netEarningsData.isFetching = true;\r\n\r\n    fetch(fetchURL_unemployment)\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        setUnemploymentData({\r\n          data: returnLabelsAndValues(res),\r\n          isFetching: false,\r\n          status: \"\",\r\n        })\r\n      )\r\n      .catch((error: string) =>\r\n        setUnemploymentData({ data: {}, isFetching: false, status: error })\r\n      );\r\n  }\r\n\r\n  function fetchData_vacancies() {\r\n    const fetchURL_vac: string = generateFetchURL_vacancies(selectedCountry);\r\n\r\n    netEarningsData.isFetching = true;\r\n\r\n    fetch(fetchURL_vac)\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        setVacanciesData({\r\n          data: returnLabelsAndValues(res),\r\n          isFetching: false,\r\n          status: \"found\",\r\n        })\r\n      )\r\n      .catch((error: string) =>\r\n        setVacanciesData({ data: {}, isFetching: false, status: \"error\" })\r\n      );\r\n  }\r\n\r\n  // useEffect(fetchData_net, [selectedCountry]);\r\n  // useEffect(fetchData_vacancies, [selectedCountry]);\r\n  // useEffect(fetchData_unemployemnt, [selectedCountry]);\r\n\r\n\r\n  useEffect(()=>{\r\n    fetchData_net()\r\n  }, [selectedCountry])\r\n\r\n  useEffect(()=>{\r\n    fetchData_vacancies()\r\n  }, [selectedCountry])\r\n\r\n  useEffect(()=>{\r\n    fetchData_unemployemnt()\r\n  }, [selectedCountry])\r\n\r\n  function changeCountry(newCountry: string): void {\r\n    setSelectedCountry(newCountry);\r\n  }\r\n\r\n\r\n  const useMousePoz = () => {\r\n    const [mousePoz, setMousePoz] = useState({ mouseX: 0, mouseY: 0 });\r\n\r\n    const updateMousePoz = (ev: any) => {\r\n      setMousePoz({ mouseX: ev.clientX-window.scrollX, \r\n        mouseY: ev.clientY-window.scrollY-chartDimensions.chartAreaHeight-chartDimensions.upwardAdjust });\r\n    };\r\n\r\n    useEffect(() => {\r\n      window.addEventListener(\"mousemove\", updateMousePoz);\r\n\r\n      return () => window.removeEventListener(\"mousemove\", updateMousePoz);\r\n    }, []);\r\n    return mousePoz;\r\n  };\r\n\r\n  const { mouseX, mouseY } = useMousePoz();\r\n\r\n\r\n\r\n\r\n  function returnLabelsAndValues(obj: any): any | null {\r\n    interface rez {\r\n      labels?: any | undefined;\r\n      values?: any | undefined;\r\n      seriesName?: any | undefined;\r\n    }\r\n\r\n    let rez = {\r\n      labels: null,\r\n      values: null,\r\n      seriesName: null,\r\n    };\r\n\r\n    if (Object.keys(obj).length < 3) {\r\n      return rez;\r\n    }\r\n\r\n    rez[\"labels\"] = obj.series.docs[0].period;\r\n    rez[\"values\"] = obj.series.docs[0].value;\r\n    rez[\"seriesName\"] = obj.series.docs[0].series_name;\r\n\r\n    return rez;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <ControlPanel\r\n          changeCountry={changeCountry}\r\n          defaultCountry=\"Euro area\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <Earnings\r\n          netEarningsData={netEarningsData.data}\r\n          selectedCountry={selectedCountry}\r\n          isFetching={netEarningsData.isFetching}\r\n        />\r\n      </div>\r\n      <div className=\"float-container\">\r\n        <div className=\"float-child\">\r\n          <Unemployment\r\n            isFetching={unemploymentData.isFetching}\r\n            selectedCountry={selectedCountry}\r\n            unemploymentData={unemploymentData.data}\r\n            mouseX = {mouseX}\r\n            mouseY = {mouseY}\r\n          />\r\n        </div>\r\n        <div className=\"float-child\">\r\n          <HoverTable \r\n          selectedCountry={selectedCountry}\r\n          mouseX = {mouseX}\r\n          mouseY = {mouseY}\r\n          netEarningsData = {netEarningsData.data}\r\n          unemploymentData ={unemploymentData.data }\r\n          vacanciesData = {vacanciesData.data}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <Vacancies\r\n          selectedCountry={selectedCountry}\r\n          vacanciesData={vacanciesData.data}\r\n          isFetching={vacanciesData.isFetching}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashContainer;\r\n","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\ControlPanel.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\services\\URLgenerationFunctions.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Earnings.tsx",["74","75"],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Vacancies.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Unemployment.tsx",["76","77","78"],"import React, { useEffect, useState } from \"react\";\r\nimport Dotz from \"./graphComponents/Dot\";\r\nimport Linez from \"../components/graphComponents/Line\";\r\n\r\nimport {\r\n  chartDimensions,\r\n  yScale_imported,\r\n  xScaleAnnual,\r\n  generateYAxisFull,\r\n  generateXaxisFull,\r\n  consistentArrayLengths,\r\n  generateGraphTitle,\r\n  missingDataMessage,\r\n} from \"../services/graphUtilityFunctions\";\r\n\r\ninterface UnemploymentProps {\r\n  selectedCountry: string;\r\n  unemploymentData: any;\r\n  isFetching: boolean;\r\n  mouseX: number; \r\n   mouseY: number;\r\n}\r\n\r\nconst Unemployment: React.FC<UnemploymentProps> = ({\r\n  selectedCountry,\r\n  unemploymentData,\r\n  isFetching,\r\n  mouseX, \r\n  mouseY\r\n}) => {\r\n  let labels: Array<any> | any = [1, 2, 3];\r\n  let values_unemp: Array<number> = [];\r\n  let yAxis: any;\r\n  let xAxis: any;\r\n  let xAxisLine: any;\r\n  let lineComponent: any;\r\n  let values_unempScaled: any;\r\n  let dots: any;\r\n  let fetchError : boolean = false; \r\n  let errorMessage: any; \r\n  const seriesName: string = 'Unemployment';\r\n  let graphTitle:any; \r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const useMousePoz = () => {\r\n  //   const [mousePoz, setMousePoz] = useState({ mouseX: 0, mouseY: 0 });\r\n\r\n  //   const updateMousePoz = (ev: any) => {\r\n  //     setMousePoz({ mouseX: ev.clientX-window.scrollX, \r\n  //       mouseY: ev.clientY-window.scrollY-chartDimensions.chartAreaHeight-chartDimensions.upwardAdjust });\r\n  //   };\r\n\r\n  //   useEffect(() => {\r\n  //     window.addEventListener(\"mousemove\", updateMousePoz);\r\n\r\n  //     return () => window.removeEventListener(\"mousemove\", updateMousePoz);\r\n  //   }, []);\r\n  //   return mousePoz;\r\n  // };\r\n\r\n  // const { mouseX, mouseY } = useMousePoz();\r\n\r\n  \r\n  labels = unemploymentData.labels;\r\n  values_unemp = unemploymentData.values;\r\n\r\n\r\n  if(values_unemp=== null){\r\n    fetchError=true \r\n  }else{\r\n    fetchError=false\r\n  }\r\n  \r\n\r\n  if(Array.isArray(values_unemp)) {\r\n\r\nlabels = consistentArrayLengths(labels, values_unemp)[0]\r\nvalues_unemp = consistentArrayLengths(labels, values_unemp)[1]\r\n\r\n  }\r\n\r\n  if (Array.isArray(values_unemp)) {\r\n\r\n\r\n    values_unempScaled = values_unemp.map((el) =>\r\n      yScale_imported(values_unemp, el)\r\n    );\r\n    const labelsScaled = values_unemp.map((el, ind) => xScaleAnnual(ind));\r\n\r\n\r\n    yAxis = generateYAxisFull(values_unemp);\r\n    xAxis = generateXaxisFull(labels);\r\n\r\n    lineComponent = (\r\n      <Linez valuesScaled={values_unempScaled} labelsScaled={labelsScaled} />\r\n    );\r\n\r\n    dots = (\r\n      <Dotz\r\n        valuesRaw={values_unemp}\r\n        valuesScaled={values_unempScaled}\r\n        labels={labels}\r\n        mouseX={mouseX}\r\n        mouseY={mouseY}\r\n        isFetching={isFetching}\r\n      />\r\n    );\r\n  }\r\n\r\n  if(fetchError){\r\n    errorMessage = missingDataMessage(seriesName, selectedCountry)\r\n  }\r\n\r\n  graphTitle = generateGraphTitle(seriesName, selectedCountry)\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <div>{JSON.stringify(unemploymentData)}</div> */}\r\n\r\n      <div className='graphContainer'>\r\n        <svg\r\n          width={chartDimensions.chartAreaWidth}\r\n          height={chartDimensions.chartAreaHeight}\r\n        >\r\n         {graphTitle}\r\n          {errorMessage}\r\n          {dots}\r\n          {lineComponent}\r\n          {yAxis}\r\n          {xAxis}\r\n          {xAxisLine}\r\n        </svg>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Unemployment;\r\n","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Line.tsx",["79","80","81"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    line,\r\n    select,\r\n  } from \"d3\";\r\n\r\n  import {xScaleQuarterly} from \"../../services/graphUtilityFunctions\";\r\n\r\n\r\n  interface LineProps {\r\n\r\n    valuesScaled:any; \r\n    labelsScaled:any; \r\n  }\r\n\r\n\r\n  const Linez: React.FC<LineProps>= (valuesScaled: any, labelsScaled: any) => {\r\n\r\n    valuesScaled = valuesScaled.valuesScaled\r\n    labelsScaled = labelsScaled.lablesScaled;\r\n\r\n\r\n    const [lineValues, setLineValues] = useState([1, 2, 3]);\r\n  \r\n    const lineRef: any = React.createRef();\r\n\r\n \r\n  \r\n    useEffect(() => {\r\n      if (Array.isArray(valuesScaled)) {\r\n        setLineValues(valuesScaled);\r\n  \r\n        const currentLine = select(lineRef.current);\r\n        animateLine(currentLine, valuesScaled);\r\n      }\r\n    },[valuesScaled]);\r\n  \r\n    return (\r\n      <g>\r\n        <path ref={lineRef} />\r\n      </g>\r\n    );\r\n  };\r\n  \r\n  const animateLine = (\r\n    currentLine: any,\r\n    valuesScaled: Array<number>\r\n  ) => {\r\n  \r\n  \r\n    if (Array.isArray(valuesScaled)) {\r\n      const drawLine = line()\r\n        // .x((d: any, i: any) => i * 10 + 50)\r\n        .x((d: any, i: any) => xScaleQuarterly(i))\r\n        //Passing function does not work :(\r\n        // .x((d: any, i: any) => xScale(i))\r\n        .y((d: any) => d);\r\n  \r\n      const linePath = drawLine(valuesScaled as Array<number> | any);\r\n  \r\n      currentLine\r\n        .transition()\r\n        .duration(1000)\r\n        .attr(\"d\", linePath)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", \"black\");\r\n    }\r\n  };\r\n\r\n  export default Linez\r\n","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\services\\graphUtilityFunctions.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Bar.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Dot.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\HoverTable.tsx",["82","83","84","85","86","87","88"],"import React from \"react\";\r\nimport {\r\n  chartDimensions,\r\n  consistentArrayLengths,\r\n} from \"../services/graphUtilityFunctions\";\r\nimport HoverTableRow from \"./HoverTableRow\";\r\n\r\ninterface HoverTableProps {\r\n  selectedCountry: string;\r\n  mouseX: number;\r\n  mouseY?: number;\r\n  netEarningsData: any;\r\n  unemploymentData: any;\r\n  vacanciesData: any;\r\n}\r\n\r\nconst HoverTable: React.FC<HoverTableProps> = ({\r\n  selectedCountry,\r\n  mouseX,\r\n  netEarningsData,\r\n  unemploymentData,\r\n  vacanciesData,\r\n  // mouseY,\r\n}) => {\r\n  let labels_vac: Array<any> = [1, 2, 3];\r\n  let values_vac: Array<number> = [1, 2, 3];\r\n  let labels_unemp: Array<any> = [1, 2, 3];\r\n  let values_unemp: Array<number> = [1, 2, 3];\r\n  let labels_net: Array<any> = [1, 2, 3];\r\n  let values_net: Array<number> = [1, 2, 3];\r\n\r\n  let yearHovered: number;\r\n  let yearQuarterHovered: string;\r\n  let hoverValue_net: number = 0;\r\n  let hoverValue_vac: number = 0;\r\n  let fetchError_net: boolean = false;\r\n  let fetchError_vac: boolean = false;\r\n  let fetchError_unemp: boolean = false;\r\n\r\n\r\n  values_vac = vacanciesData.values;\r\n  labels_vac = vacanciesData.labels;\r\n\r\n  values_unemp = unemploymentData.values;\r\n  labels_unemp = unemploymentData.labels;\r\n\r\n  values_net = netEarningsData.values;\r\n  labels_net = netEarningsData.labels;\r\n\r\n\r\n  if (!Array.isArray(values_vac)||values_vac===null) {\r\n    fetchError_vac = true;\r\n  } else {\r\n    fetchError_vac = false;\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th colSpan={1}>Hover Data</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>Period</td>\r\n            <td>Value</td>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={2}>Earnings</th>\r\n          </tr>\r\n\r\n          {/* net earnings row  */}\r\n\r\n          <HoverTableRow\r\n          mouseX = {mouseX}\r\n          fetchError = {fetchError_net}\r\n          values = {values_net}\r\n          labels ={labels_net}\r\n          isQuarterly = {false}          \r\n          />\r\n\r\n          <tr>\r\n            <th colSpan={2}>Unemployment</th>\r\n          </tr>\r\n          {/* unemp row */}\r\n          <HoverTableRow\r\n            mouseX={mouseX}\r\n            fetchError={fetchError_unemp}\r\n            values={values_unemp}\r\n            labels={labels_unemp}\r\n            isQuarterly={true}\r\n          />\r\n\r\n          <tr>\r\n            <th colSpan={2}>Vacancy Rate</th>\r\n          </tr>\r\n          {/* vacancies row  */}\r\n          <HoverTableRow\r\n            mouseX={mouseX}\r\n            fetchError={fetchError_vac}\r\n            values={values_vac}\r\n            labels={labels_vac}\r\n            isQuarterly={false}\r\n          />\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HoverTable;\r\n","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\HoverTableRow.tsx",["89"],"import React from \"react\";\r\nimport {\r\n  chartDimensions,\r\n  consistentArrayLengths,\r\n} from \"../services/graphUtilityFunctions\";\r\n\r\ninterface HoverTableRowProps {\r\n  mouseX: number;\r\n  values: Array<any>;\r\n  labels: Array<any>;\r\n  fetchError: boolean;\r\n  isQuarterly: boolean;\r\n}\r\n\r\nconst HoverTableRow: React.FC<HoverTableRowProps> = ({\r\n  mouseX,\r\n  values,\r\n  labels,\r\n  fetchError,\r\n  isQuarterly,\r\n}) => {\r\n\r\n  let yearHovered: number;\r\n  let yearQuarterHovered: string;\r\n  let finalYearOutput: string;\r\n\r\n  if (!fetchError) {\r\n    labels = consistentArrayLengths(labels, values)[0];\r\n    values = consistentArrayLengths(labels, values)[1];\r\n  }\r\n\r\n  function returnQuarterFromMouseX(mouseX: number) {\r\n    let quarterXDistance = chartDimensions.dataPoints.centerToCenter / 4;\r\n    let closestQuarter = Math.floor(mouseX / quarterXDistance) % 4;\r\n    if (closestQuarter === 0) {\r\n      closestQuarter = 4;\r\n    }\r\n    let closestYear = returnYearFromMouseX(mouseX);\r\n\r\n    if (mouseX < 50) {\r\n      closestQuarter = 1;\r\n    }\r\n    if (mouseX > 700) {\r\n      closestQuarter = 4;\r\n    }\r\n\r\n    let yearQuarter = `${closestYear}-Q${closestQuarter}`;\r\n\r\n    return yearQuarter;\r\n  }\r\n\r\n  function returnYearFromMouseX(mouseX: number) {\r\n    let yearOutput;\r\n    let yearXDistance = chartDimensions.dataPoints.centerToCenter;\r\n    let yearXStart = 50;\r\n\r\n    yearOutput = Math.floor((mouseX - yearXStart) / yearXDistance + 2005);\r\n    if (yearOutput < 2005) {\r\n      yearOutput = 2005;\r\n    }\r\n    if (yearOutput > 2020) {\r\n      yearOutput = 2020;\r\n    }\r\n\r\n    return yearOutput;\r\n  }\r\n\r\n  yearHovered = returnYearFromMouseX(mouseX);\r\n\r\n\r\n  function hoverValueFromAnnualData(\r\n    labelsArray: Array<any>,\r\n    valuesArray: Array<any>\r\n  ) {\r\n    if (fetchError || values=== undefined) {\r\n      return \"No Data\";\r\n    } else {\r\n      const indexPoz = labelsArray.indexOf(yearHovered);\r\n      const valueOutput = valuesArray[indexPoz];\r\n\r\n      if (valueOutput === 0 || valueOutput === undefined) {\r\n        return \"No Data\";\r\n      } else {\r\n        return valueOutput;\r\n      }\r\n    }\r\n  }\r\n\r\n  function hoverValueFromQuarterlyData(    mouseX:number, \r\n    valuesArray: Array<any>, labels:Array<any>){\r\n\r\n      let quarterXDistance = chartDimensions.dataPoints.centerToCenter / 4;\r\n      let mouseQuarters = Math.floor(mouseX / quarterXDistance)\r\n\r\n      mouseQuarters -=5\r\n\r\n      if(mouseQuarters<0){\r\n        mouseQuarters = 0\r\n      }\r\n\r\n      if(mouseQuarters>63){\r\n        mouseQuarters=63\r\n      }\r\n\r\n      const valueOutput = valuesArray[mouseQuarters];\r\n\r\n\r\n      // console.log(labels)\r\n\r\n\r\n\r\n      return valueOutput\r\n    }\r\n\r\n\r\n\r\n  let valueHovered = isQuarterly\r\n    ? hoverValueFromQuarterlyData(mouseX, values, labels)\r\n    : hoverValueFromAnnualData(labels, values);\r\n\r\n  let finalValueOutput = valueHovered;\r\n\r\n  finalYearOutput = isQuarterly\r\n    ? returnQuarterFromMouseX(mouseX)\r\n    : `${returnYearFromMouseX(mouseX)}`;\r\n\r\n  return (\r\n    <tr>\r\n      <td>{finalYearOutput}</td>\r\n      <td>{finalValueOutput}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default HoverTableRow;\r\n",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":100,"column":6,"nodeType":"96","endLine":100,"endColumn":23,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":104,"column":6,"nodeType":"96","endLine":104,"endColumn":23,"suggestions":"99"},{"ruleId":"94","severity":1,"message":"100","line":108,"column":6,"nodeType":"96","endLine":108,"endColumn":23,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":143,"column":9,"nodeType":"104","messageId":"105","endLine":143,"endColumn":12},{"ruleId":"106","severity":1,"message":"107","line":13,"column":3,"nodeType":"104","messageId":"108","endLine":13,"endColumn":22},{"ruleId":"106","severity":1,"message":"109","line":52,"column":5,"nodeType":"104","messageId":"108","endLine":52,"endColumn":15},{"ruleId":"106","severity":1,"message":"110","line":1,"column":17,"nodeType":"104","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"111","line":1,"column":28,"nodeType":"104","messageId":"108","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"107","line":11,"column":3,"nodeType":"104","messageId":"108","endLine":11,"endColumn":22},{"ruleId":"106","severity":1,"message":"112","line":7,"column":28,"nodeType":"104","messageId":"108","endLine":7,"endColumn":43},{"ruleId":"106","severity":1,"message":"113","line":27,"column":12,"nodeType":"104","messageId":"108","endLine":27,"endColumn":22},{"ruleId":"94","severity":1,"message":"114","line":40,"column":7,"nodeType":"96","endLine":40,"endColumn":21,"suggestions":"115"},{"ruleId":"106","severity":1,"message":"112","line":3,"column":3,"nodeType":"104","messageId":"108","endLine":3,"endColumn":18},{"ruleId":"106","severity":1,"message":"116","line":4,"column":3,"nodeType":"104","messageId":"108","endLine":4,"endColumn":25},{"ruleId":"106","severity":1,"message":"107","line":5,"column":3,"nodeType":"104","messageId":"108","endLine":5,"endColumn":22},{"ruleId":"106","severity":1,"message":"117","line":33,"column":7,"nodeType":"104","messageId":"108","endLine":33,"endColumn":26},{"ruleId":"106","severity":1,"message":"118","line":34,"column":7,"nodeType":"104","messageId":"108","endLine":34,"endColumn":33},{"ruleId":"106","severity":1,"message":"119","line":35,"column":7,"nodeType":"104","messageId":"108","endLine":35,"endColumn":29},{"ruleId":"106","severity":1,"message":"120","line":36,"column":7,"nodeType":"104","messageId":"108","endLine":36,"endColumn":29},{"ruleId":"106","severity":1,"message":"118","line":23,"column":7,"nodeType":"104","messageId":"108","endLine":23,"endColumn":33},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData_net'. Either include it or remove the dependency array.","ArrayExpression",["123"],"React Hook useEffect has a missing dependency: 'fetchData_vacancies'. Either include it or remove the dependency array.",["124"],"React Hook useEffect has a missing dependency: 'fetchData_unemployemnt'. Either include it or remove the dependency array.",["125"],"@typescript-eslint/no-redeclare","'rez' is already defined.","Identifier","redeclared","@typescript-eslint/no-unused-vars","'generateYaxisValues' is defined but never used.","unusedVar","'fetchError' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'chartDimensions' is defined but never used.","'lineValues' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'lineRef'. Either include it or remove the dependency array.",["126"],"'consistentArrayLengths' is defined but never used.","'yearHovered' is defined but never used.","'yearQuarterHovered' is defined but never used.","'hoverValue_net' is assigned a value but never used.","'hoverValue_vac' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [fetchData_net, selectedCountry]",{"range":"135","text":"136"},"Update the dependencies array to be: [fetchData_vacancies, selectedCountry]",{"range":"137","text":"138"},"Update the dependencies array to be: [fetchData_unemployemnt, selectedCountry]",{"range":"139","text":"140"},"Update the dependencies array to be: [lineRef, valuesScaled]",{"range":"141","text":"142"},[2916,2933],"[fetchData_net, selectedCountry]",[2989,3006],"[fetchData_vacancies, selectedCountry]",[3065,3082],"[fetchData_unemployemnt, selectedCountry]",[937,951],"[lineRef, valuesScaled]"]