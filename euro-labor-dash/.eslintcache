[{"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\index.tsx":"1","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\reportWebVitals.ts":"2","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\App.tsx":"3","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\DashContainer.tsx":"4","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\ControlPanel.tsx":"5","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\services\\URLgenerationFunctions.tsx":"6","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Earnings.tsx":"7","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Vacancies.tsx":"8","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Unemployment.tsx":"9","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Line.tsx":"10","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\services\\graphUtilityFunctions.tsx":"11","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Bar.tsx":"12","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Dot.tsx":"13","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\HoverTable.tsx":"14","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\HoverTableRow.tsx":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":234,"mtime":1607705143385,"results":"19","hashOfConfig":"17"},{"size":5635,"mtime":1614785196570,"results":"20","hashOfConfig":"17"},{"size":621,"mtime":1610980120750,"results":"21","hashOfConfig":"17"},{"size":1536,"mtime":1614703120697,"results":"22","hashOfConfig":"17"},{"size":2480,"mtime":1614706678398,"results":"23","hashOfConfig":"17"},{"size":2521,"mtime":1614782891760,"results":"24","hashOfConfig":"17"},{"size":3327,"mtime":1614716198026,"results":"25","hashOfConfig":"17"},{"size":1570,"mtime":1614624017454,"results":"26","hashOfConfig":"17"},{"size":5960,"mtime":1614708080243,"results":"27","hashOfConfig":"17"},{"size":1161,"mtime":1614703120778,"results":"28","hashOfConfig":"17"},{"size":1853,"mtime":1614703120778,"results":"29","hashOfConfig":"17"},{"size":2755,"mtime":1614861308424,"results":"30","hashOfConfig":"17"},{"size":3092,"mtime":1614861960149,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ofp5zp",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\index.tsx",[],["67","68"],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\reportWebVitals.ts",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\App.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\DashContainer.tsx",["69","70","71","72"],"import React, { useState, useEffect } from \"react\";\r\nimport ControlPanel from \"./ControlPanel\";\r\nimport {\r\n  generateFetchURL_net,\r\n  generateFetchURL_vacancies,\r\n  generateFetchURL_unemployemnt,\r\n} from \"../services/URLgenerationFunctions\";\r\nimport Earnings from \"./Earnings\";\r\nimport Unemployment from \"./Unemployment\";\r\nimport Vacancies from \"./Vacancies\";\r\n// import HoverTable from \"./HoverTable\"\r\nimport HoverTable from \"./HoverTable\";\r\nimport {chartDimensions} from \"../services/graphUtilityFunctions\"\r\n\r\n// import HoverTable from 'c:/Users/Admin/Documents/js/react/euro-labor-dash/euro-labor-dash/src/components/HoverTable'\r\n\r\nconst DashContainer: React.FC = () => {\r\n  const [selectedCountry, setSelectedCountry] = useState<string>(\"Euro area\");\r\n  const [netEarningsData, setNetEarningsData] = useState({\r\n    data: {},\r\n    isFetching: false,\r\n    status: \"\",\r\n  });\r\n  const [unemploymentData, setUnemploymentData] = useState({\r\n    data: {},\r\n    isFetching: false,\r\n    status: \"\",\r\n  });\r\n  const [vacanciesData, setVacanciesData] = useState({\r\n    data: {},\r\n    isFetching: false,\r\n    status: \"\",\r\n  });\r\n\r\n  function fetchData_net() {\r\n    const fetchURL_net: string = generateFetchURL_net(selectedCountry);\r\n\r\n    netEarningsData.isFetching = true;\r\n\r\n    fetch(fetchURL_net)\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        setNetEarningsData({\r\n          data: returnLabelsAndValues(res),\r\n          isFetching: false,\r\n          status: \"\",\r\n        })\r\n      )\r\n      .catch((error: string) =>\r\n        setNetEarningsData({ data: {}, isFetching: false, status: error })\r\n      );\r\n  }\r\n  function fetchData_unemployemnt() {\r\n    const fetchURL_unemployment: string = generateFetchURL_unemployemnt(\r\n      selectedCountry\r\n    );\r\n\r\n    netEarningsData.isFetching = true;\r\n\r\n    fetch(fetchURL_unemployment)\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        setUnemploymentData({\r\n          data: returnLabelsAndValues(res),\r\n          isFetching: false,\r\n          status: \"\",\r\n        })\r\n      )\r\n      .catch((error: string) =>\r\n        setUnemploymentData({ data: {}, isFetching: false, status: error })\r\n      );\r\n  }\r\n\r\n  function fetchData_vacancies() {\r\n    const fetchURL_vac: string = generateFetchURL_vacancies(selectedCountry);\r\n\r\n    netEarningsData.isFetching = true;\r\n\r\n    fetch(fetchURL_vac)\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        setVacanciesData({\r\n          data: returnLabelsAndValues(res),\r\n          isFetching: false,\r\n          status: \"found\",\r\n        })\r\n      )\r\n      .catch((error: string) =>\r\n        setVacanciesData({ data: {}, isFetching: false, status: \"error\" })\r\n      );\r\n  }\r\n\r\n  // useEffect(fetchData_net, [selectedCountry]);\r\n  // useEffect(fetchData_vacancies, [selectedCountry]);\r\n  // useEffect(fetchData_unemployemnt, [selectedCountry]);\r\n\r\n\r\n  useEffect(()=>{\r\n    fetchData_net()\r\n  }, [selectedCountry])\r\n\r\n  useEffect(()=>{\r\n    fetchData_vacancies()\r\n  }, [selectedCountry])\r\n\r\n  useEffect(()=>{\r\n    fetchData_unemployemnt()\r\n  }, [selectedCountry])\r\n\r\n  function changeCountry(newCountry: string): void {\r\n    setSelectedCountry(newCountry);\r\n  }\r\n\r\n\r\n  const useMousePoz = () => {\r\n    const [mousePoz, setMousePoz] = useState({ mouseX: 0, mouseY: 0 });\r\n\r\n    const updateMousePoz = (ev: any) => {\r\n      setMousePoz({ mouseX: ev.clientX-window.scrollX, \r\n        mouseY: ev.clientY-window.scrollY-chartDimensions.chartAreaHeight-chartDimensions.upwardAdjust });\r\n    };\r\n\r\n    useEffect(() => {\r\n      window.addEventListener(\"mousemove\", updateMousePoz);\r\n\r\n      return () => window.removeEventListener(\"mousemove\", updateMousePoz);\r\n    }, []);\r\n    return mousePoz;\r\n  };\r\n\r\n  const { mouseX, mouseY } = useMousePoz();\r\n\r\n\r\n\r\n\r\n  function returnLabelsAndValues(obj: any): any | null {\r\n    interface rez {\r\n      labels?: any | undefined;\r\n      values?: any | undefined;\r\n      seriesName?: any | undefined;\r\n    }\r\n\r\n    let rez = {\r\n      labels: null,\r\n      values: null,\r\n      seriesName: null,\r\n    };\r\n\r\n    if (Object.keys(obj).length < 3) {\r\n      return rez;\r\n    }\r\n\r\n    rez[\"labels\"] = obj.series.docs[0].period;\r\n    rez[\"values\"] = obj.series.docs[0].value;\r\n    rez[\"seriesName\"] = obj.series.docs[0].series_name;\r\n\r\n    return rez;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <ControlPanel\r\n          changeCountry={changeCountry}\r\n          defaultCountry=\"Euro area\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <Earnings\r\n          netEarningsData={netEarningsData.data}\r\n          selectedCountry={selectedCountry}\r\n          isFetching={netEarningsData.isFetching}\r\n        />\r\n      </div>\r\n      <div className=\"float-container\">\r\n        <div className=\"float-child\">\r\n          <Unemployment\r\n            isFetching={unemploymentData.isFetching}\r\n            selectedCountry={selectedCountry}\r\n            unemploymentData={unemploymentData.data}\r\n            mouseX = {mouseX}\r\n            mouseY = {mouseY}\r\n          />\r\n        </div>\r\n        <div className=\"float-child\">\r\n          <HoverTable \r\n          selectedCountry={selectedCountry}\r\n          mouseX = {mouseX}\r\n          mouseY = {mouseY}\r\n          netEarningsData = {netEarningsData.data}\r\n          unemploymentData ={unemploymentData.data }\r\n          vacanciesData = {vacanciesData.data}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <Vacancies\r\n          selectedCountry={selectedCountry}\r\n          vacanciesData={vacanciesData.data}\r\n          isFetching={vacanciesData.isFetching}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashContainer;\r\n","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\ControlPanel.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\services\\URLgenerationFunctions.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Earnings.tsx",["73"],"import React from \"react\";\r\nimport Bar from \"./graphComponents/Bar\";\r\n\r\nimport {\r\n  chartDimensions,\r\n  xScaleAnnual,\r\n  generateYAxisFull,\r\n  generateXaxisFull,\r\n  yScale_imported,\r\n  consistentArrayLengths,\r\n  missingDataMessage,\r\n  generateGraphTitle,\r\n} from \"../services/graphUtilityFunctions\";\r\n\r\n\r\ninterface EarningsProps {\r\n  children?: any;\r\n  selectedCountry: string;\r\n  netEarningsData: any;\r\n  isFetching: boolean;\r\n}\r\n\r\nconst Earnings: React.FC<EarningsProps> = ({\r\n  // netEarningsData: netEarningsData,\r\n  netEarningsData,\r\n  selectedCountry,\r\n  isFetching,\r\n}) => {\r\n  let labels: Array<any> = [];\r\n  let values_net: Array<number> = [1, 2, 3];\r\n  let yAxis: any;\r\n  let xAxis: any;\r\n  let fetchError : boolean = false; \r\n  let errorMessage: any; \r\n  const seriesName: string = 'Earnings';\r\n  let graphTitle:any; \r\n\r\n  let bars: any;\r\n\r\n  values_net = netEarningsData.values;\r\n  labels = netEarningsData.labels\r\n\r\n  \r\n  if(values_net=== null){\r\n    fetchError=true \r\n  }else{\r\n    fetchError=false\r\n  }\r\n  \r\n  \r\n  \r\n  if (Array.isArray(values_net)) {\r\n\r\n    labels = consistentArrayLengths(labels, values_net)[0]\r\n    values_net = consistentArrayLengths(labels, values_net)[1]\r\n\r\n\r\n  }\r\n  \r\n  \r\n\r\n  if (Array.isArray(values_net)) {\r\n    values_net = values_net.map((el) => Math.round(el / 1000));\r\n  }\r\n\r\n\r\n  if (Array.isArray(values_net)) {\r\n    // values_net = values_net.map((el: any) => Math.round(el));\r\n\r\n\r\n    yAxis = generateYAxisFull(values_net);\r\n    xAxis = generateXaxisFull(labels);\r\n\r\n\r\n    bars = values_net.map((row: any, ind: number) => (\r\n\r\n      <Bar\r\n        labelScaled={xScaleAnnual(ind)}\r\n        valueScaled={yScale_imported(values_net, row)}\r\n        valueRaw = {row}\r\n        barWidth={chartDimensions.dataPoints.barWidth}\r\n        key={ind}\r\n      />\r\n    ));\r\n  }\r\n\r\n  if(values_net=== null){\r\n    \r\n    errorMessage = missingDataMessage(seriesName, selectedCountry)\r\n  }\r\n\r\n  graphTitle = generateGraphTitle(seriesName, selectedCountry)\r\n\r\n  return (\r\n    <>\r\n      {/* <div>{JSON.stringify(netEarningsData)}</div> */}\r\n\r\n      {/* <div>{`${selectedCountry} Net Earnings`}</div> */}\r\n\r\n      <div className='graphContainer'>\r\n        <svg\r\n          width={chartDimensions.chartAreaWidth}\r\n          height={chartDimensions.chartAreaHeight}\r\n        >\r\n          {graphTitle}\r\n          {errorMessage}\r\n          {yAxis}\r\n          {xAxis}\r\n          {bars}\r\n        </svg>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Earnings;\r\n","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Vacancies.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Unemployment.tsx",["74","75"],"import React, { useEffect, useState } from \"react\";\r\nimport Dotz from \"./graphComponents/Dot\";\r\nimport Linez from \"../components/graphComponents/Line\";\r\n\r\nimport {\r\n  chartDimensions,\r\n  yScale_imported,\r\n  xScaleAnnual,\r\n  generateYAxisFull,\r\n  generateXaxisFull,\r\n  consistentArrayLengths,\r\n  generateGraphTitle,\r\n  missingDataMessage,\r\n} from \"../services/graphUtilityFunctions\";\r\n\r\ninterface UnemploymentProps {\r\n  selectedCountry: string;\r\n  unemploymentData: any;\r\n  isFetching: boolean;\r\n  mouseX: number; \r\n   mouseY: number;\r\n}\r\n\r\nconst Unemployment: React.FC<UnemploymentProps> = ({\r\n  selectedCountry,\r\n  unemploymentData,\r\n  isFetching,\r\n  mouseX, \r\n  mouseY\r\n}) => {\r\n  let labels: Array<any> | any = [1, 2, 3];\r\n  let values_unemp: Array<number> = [];\r\n  let yAxis: any;\r\n  let xAxis: any;\r\n  let xAxisLine: any;\r\n  let lineComponent: any;\r\n  let values_unempScaled: any;\r\n  let dots: any;\r\n  let fetchError : boolean = false; \r\n  let errorMessage: any; \r\n  const seriesName: string = 'Unemployment';\r\n  let graphTitle:any; \r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const useMousePoz = () => {\r\n  //   const [mousePoz, setMousePoz] = useState({ mouseX: 0, mouseY: 0 });\r\n\r\n  //   const updateMousePoz = (ev: any) => {\r\n  //     setMousePoz({ mouseX: ev.clientX-window.scrollX, \r\n  //       mouseY: ev.clientY-window.scrollY-chartDimensions.chartAreaHeight-chartDimensions.upwardAdjust });\r\n  //   };\r\n\r\n  //   useEffect(() => {\r\n  //     window.addEventListener(\"mousemove\", updateMousePoz);\r\n\r\n  //     return () => window.removeEventListener(\"mousemove\", updateMousePoz);\r\n  //   }, []);\r\n  //   return mousePoz;\r\n  // };\r\n\r\n  // const { mouseX, mouseY } = useMousePoz();\r\n\r\n  \r\n  labels = unemploymentData.labels;\r\n  values_unemp = unemploymentData.values;\r\n\r\n\r\n  if(values_unemp=== null){\r\n    fetchError=true \r\n  }else{\r\n    fetchError=false\r\n  }\r\n  \r\n\r\n  if(Array.isArray(values_unemp)) {\r\n\r\nlabels = consistentArrayLengths(labels, values_unemp)[0]\r\nvalues_unemp = consistentArrayLengths(labels, values_unemp)[1]\r\n\r\n  }\r\n\r\n  if (Array.isArray(values_unemp)) {\r\n\r\n\r\n    values_unempScaled = values_unemp.map((el) =>\r\n      yScale_imported(values_unemp, el)\r\n    );\r\n    const labelsScaled = values_unemp.map((el, ind) => xScaleAnnual(ind));\r\n\r\n\r\n    yAxis = generateYAxisFull(values_unemp);\r\n    xAxis = generateXaxisFull(labels);\r\n\r\n    lineComponent = (\r\n      <Linez valuesScaled={values_unempScaled} labelsScaled={labelsScaled} />\r\n    );\r\n\r\n    dots = (\r\n      <Dotz\r\n        valuesRaw={values_unemp}\r\n        valuesScaled={values_unempScaled}\r\n        labels={labels}\r\n        mouseX={mouseX}\r\n        mouseY={mouseY}\r\n        isFetching={isFetching}\r\n      />\r\n    );\r\n  }\r\n\r\n  if(fetchError){\r\n    errorMessage = missingDataMessage(seriesName, selectedCountry)\r\n  }\r\n\r\n  graphTitle = generateGraphTitle(seriesName, selectedCountry)\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <div>{JSON.stringify(unemploymentData)}</div> */}\r\n\r\n      <div className='graphContainer'>\r\n        <svg\r\n          width={chartDimensions.chartAreaWidth}\r\n          height={chartDimensions.chartAreaHeight}\r\n        >\r\n         {graphTitle}\r\n          {errorMessage}\r\n          {dots}\r\n          {lineComponent}\r\n          {yAxis}\r\n          {xAxis}\r\n          {xAxisLine}\r\n        </svg>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Unemployment;\r\n","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Line.tsx",["76","77"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    line,\r\n    select,\r\n  } from \"d3\";\r\n\r\n  import {xScaleQuarterly} from \"../../services/graphUtilityFunctions\";\r\n\r\n\r\n  interface LineProps {\r\n\r\n    valuesScaled:any; \r\n    labelsScaled:any; \r\n  }\r\n\r\n\r\n  const Linez: React.FC<LineProps>= (valuesScaled: any, labelsScaled: any) => {\r\n\r\n    valuesScaled = valuesScaled.valuesScaled\r\n    labelsScaled = labelsScaled.lablesScaled;\r\n\r\n\r\n    const [lineValues, setLineValues] = useState([1, 2, 3]);\r\n  \r\n    const lineRef: any = React.createRef();\r\n\r\n \r\n  \r\n    useEffect(() => {\r\n      if (Array.isArray(valuesScaled)) {\r\n        setLineValues(valuesScaled);\r\n  \r\n        const currentLine = select(lineRef.current);\r\n        animateLine(currentLine, valuesScaled);\r\n      }\r\n    },[valuesScaled]);\r\n  \r\n    return (\r\n      <g>\r\n        <path ref={lineRef} />\r\n      </g>\r\n    );\r\n  };\r\n  \r\n  const animateLine = (\r\n    currentLine: any,\r\n    valuesScaled: Array<number>\r\n  ) => {\r\n  \r\n  \r\n    if (Array.isArray(valuesScaled)) {\r\n      const drawLine = line()\r\n        // .x((d: any, i: any) => i * 10 + 50)\r\n        .x((d: any, i: any) => xScaleQuarterly(i))\r\n        //Passing function does not work :(\r\n        // .x((d: any, i: any) => xScale(i))\r\n        .y((d: any) => d);\r\n  \r\n      const linePath = drawLine(valuesScaled as Array<number> | any);\r\n  \r\n      currentLine\r\n        .transition()\r\n        .duration(1000)\r\n        .attr(\"d\", linePath)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", \"black\");\r\n    }\r\n  };\r\n\r\n  export default Linez\r\n","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\services\\graphUtilityFunctions.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Bar.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Dot.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\HoverTable.tsx",["78","79","80","81","82","83"],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\HoverTableRow.tsx",["84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":100,"column":6,"nodeType":"91","endLine":100,"endColumn":23,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":104,"column":6,"nodeType":"91","endLine":104,"endColumn":23,"suggestions":"94"},{"ruleId":"89","severity":1,"message":"95","line":108,"column":6,"nodeType":"91","endLine":108,"endColumn":23,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":143,"column":9,"nodeType":"99","messageId":"100","endLine":143,"endColumn":12},{"ruleId":"101","severity":1,"message":"102","line":47,"column":5,"nodeType":"99","messageId":"103","endLine":47,"endColumn":15},{"ruleId":"101","severity":1,"message":"104","line":1,"column":17,"nodeType":"99","messageId":"103","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"105","line":1,"column":28,"nodeType":"99","messageId":"103","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"106","line":23,"column":12,"nodeType":"99","messageId":"103","endLine":23,"endColumn":22},{"ruleId":"89","severity":1,"message":"107","line":36,"column":7,"nodeType":"91","endLine":36,"endColumn":21,"suggestions":"108"},{"ruleId":"101","severity":1,"message":"109","line":3,"column":3,"nodeType":"99","messageId":"103","endLine":3,"endColumn":18},{"ruleId":"101","severity":1,"message":"110","line":4,"column":3,"nodeType":"99","messageId":"103","endLine":4,"endColumn":25},{"ruleId":"101","severity":1,"message":"111","line":32,"column":7,"nodeType":"99","messageId":"103","endLine":32,"endColumn":26},{"ruleId":"101","severity":1,"message":"112","line":33,"column":7,"nodeType":"99","messageId":"103","endLine":33,"endColumn":33},{"ruleId":"101","severity":1,"message":"113","line":34,"column":7,"nodeType":"99","messageId":"103","endLine":34,"endColumn":29},{"ruleId":"101","severity":1,"message":"114","line":35,"column":7,"nodeType":"99","messageId":"103","endLine":35,"endColumn":29},{"ruleId":"101","severity":1,"message":"112","line":24,"column":7,"nodeType":"99","messageId":"103","endLine":24,"endColumn":33},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData_net'. Either include it or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has a missing dependency: 'fetchData_vacancies'. Either include it or remove the dependency array.",["118"],"React Hook useEffect has a missing dependency: 'fetchData_unemployemnt'. Either include it or remove the dependency array.",["119"],"@typescript-eslint/no-redeclare","'rez' is already defined.","Identifier","redeclared","@typescript-eslint/no-unused-vars","'fetchError' is assigned a value but never used.","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'lineValues' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'lineRef'. Either include it or remove the dependency array.",["120"],"'chartDimensions' is defined but never used.","'consistentArrayLengths' is defined but never used.","'yearHovered' is defined but never used.","'yearQuarterHovered' is defined but never used.","'hoverValue_net' is assigned a value but never used.","'hoverValue_vac' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [fetchData_net, selectedCountry]",{"range":"129","text":"130"},"Update the dependencies array to be: [fetchData_vacancies, selectedCountry]",{"range":"131","text":"132"},"Update the dependencies array to be: [fetchData_unemployemnt, selectedCountry]",{"range":"133","text":"134"},"Update the dependencies array to be: [lineRef, valuesScaled]",{"range":"135","text":"136"},[2916,2933],"[fetchData_net, selectedCountry]",[2989,3006],"[fetchData_vacancies, selectedCountry]",[3065,3082],"[fetchData_unemployemnt, selectedCountry]",[791,805],"[lineRef, valuesScaled]"]