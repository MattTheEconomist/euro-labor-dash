[{"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\index.tsx":"1","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\reportWebVitals.ts":"2","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\App.tsx":"3","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\DashContainer.tsx":"4","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\ControlPanel.tsx":"5","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\services\\URLgenerationFunctions.tsx":"6","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Earnings.tsx":"7","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Vacancies.tsx":"8","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Unemployment.tsx":"9","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Dotz.tsx":"10","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Line.tsx":"11","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\services\\graphUtilityFunctions.tsx":"12","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Barz.tsx":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":234,"mtime":1607705143385,"results":"17","hashOfConfig":"15"},{"size":4693,"mtime":1612276927773,"results":"18","hashOfConfig":"15"},{"size":621,"mtime":1610980120750,"results":"19","hashOfConfig":"15"},{"size":1581,"mtime":1610980120756,"results":"20","hashOfConfig":"15"},{"size":4687,"mtime":1612798789629,"results":"21","hashOfConfig":"15"},{"size":482,"mtime":1611060204392,"results":"22","hashOfConfig":"15"},{"size":4772,"mtime":1612965161281,"results":"23","hashOfConfig":"15"},{"size":2339,"mtime":1612361113423,"results":"24","hashOfConfig":"15"},{"size":1588,"mtime":1612798436764,"results":"25","hashOfConfig":"15"},{"size":1961,"mtime":1612965164942,"results":"26","hashOfConfig":"15"},{"size":1209,"mtime":1612359539744,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ofp5zp",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\index.tsx",[],["62","63"],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\reportWebVitals.ts",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\App.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\DashContainer.tsx",["64","65"],"import React, { useState, useEffect } from \"react\";\r\nimport ControlPanel from \"./ControlPanel\";\r\nimport {\r\n  generateFetchURL_net,\r\n  // generateFetchURL_vacancies,\r\n  generateFetchURL_unemployemnt,\r\n} from \"../services/URLgenerationFunctions\";\r\nimport Earnings from \"./Earnings\";\r\nimport Unemployment from \"./Unemployment\"\r\n// import Vacancies from \"./Vacancies\"\r\n\r\n\r\nconst DashContainer: React.FC = () => {\r\n  const [selectedCountry, setSelectedCountry] = useState<string>(\"Euro area\");\r\n  const [netEarningsData, setNetEarningsData] = useState({\r\n    data: {},\r\n    isFetching: false,\r\n    status: \"\",\r\n  });\r\n  // const [vacancyData, setVacancyData] = useState({\r\n  //   data:{}, \r\n  //   isFetching: false,\r\n  //   status: \"\",\r\n  // })\r\n  const [unemploymentData, setUnemploymentData] = useState({\r\n    data: {},\r\n    isFetching: false,\r\n    status: \"\",\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n  function fetchData_net() {\r\n    const fetchURL_net: string = generateFetchURL_net(selectedCountry);\r\n\r\n    netEarningsData.isFetching=true\r\n\r\n    fetch(fetchURL_net)\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        setNetEarningsData({\r\n          data: returnLabelsAndValues(res),\r\n          isFetching: false,\r\n          status: \"\",\r\n\r\n        })\r\n      )\r\n      .catch((error: string) =>\r\n        setNetEarningsData({ data: {}, isFetching: false, status: error, })\r\n      );\r\n\r\n  }\r\n  function fetchData_unemployemnt(){\r\n\r\n  const fetchURL_unemployment: string = generateFetchURL_unemployemnt(selectedCountry);\r\n\r\n  netEarningsData.isFetching=true\r\n\r\n  fetch(fetchURL_unemployment)\r\n    .then((res) => res.json())\r\n    .then((res) =>\r\n      setUnemploymentData({\r\n        data: returnLabelsAndValues(res),\r\n        isFetching: false,\r\n        status: \"\",\r\n\r\n      })\r\n    )\r\n    .catch((error: string) =>\r\n       setUnemploymentData({ data: {}, isFetching: false, status: error, })\r\n    );\r\n\r\n}\r\n\r\n// function fetchData_vacancies(){\r\n\r\n//   const fetchURL_vac: string = generateFetchURL_vacancies(selectedCountry);\r\n\r\n//   netEarningsData.isFetching=true\r\n\r\n//   fetch(fetchURL_vac)\r\n//     .then((res) => res.json())\r\n//     .then((res) =>\r\n//         setVacancyData({\r\n//         data: returnLabelsAndValues(res),\r\n//         isFetching: false,\r\n//         status: \"\",\r\n\r\n//       })\r\n//     )\r\n//     .catch((error: string) =>\r\n//        setVacancyData({ data: {}, isFetching: false, status: error, })\r\n//     );\r\n\r\n// }\r\n\r\n  // useEffect(() => {\r\n  //   fetchData_net();\r\n  //   // fetchData_vacancies();\r\n  //   fetchData_unemployemnt()\r\n  // }, [selectedCountry]);\r\n\r\n  useEffect(() => {\r\n    fetchData_net();\r\n    console.log('fetched')\r\n    // fetchData_vacancies();\r\n    fetchData_unemployemnt()\r\n  }, [selectedCountry]);\r\n\r\n  function changeCountry(newCountry: string): void {\r\n    setSelectedCountry(newCountry);\r\n  }\r\n\r\n  function returnLabelsAndValues(obj: any): any | null {\r\n    interface rez {\r\n      labels?: any | undefined;\r\n      values?: any | undefined;\r\n      seriesName?: any | undefined;\r\n    }\r\n\r\n    let rez = {\r\n      labels: null,\r\n      values: null,\r\n      seriesName: null,\r\n    };\r\n\r\n    if (Object.keys(obj).length < 3) {\r\n      return rez;\r\n    }\r\n\r\n    rez[\"labels\"] = obj.series.docs[0].period;\r\n    rez[\"values\"] = obj.series.docs[0].value;\r\n    rez[\"seriesName\"] = obj.series.docs[0].series_name;\r\n\r\n\r\n\r\n    return rez;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <ControlPanel\r\n          changeCountry={changeCountry}\r\n          defaultCountry=\"Euro area\"\r\n          // defaultCountry=\"Romania\"\r\n        />\r\n      </div>\r\n      {/* <div>\r\n        <Vacancies \r\n        selectedCountry={selectedCountry}\r\n        vacancyData = {vacancyData.data}\r\n        isFetching = {vacancyData.isFetching}\r\n        />\r\n      </div> */}\r\n\r\n\r\n      <div>\r\n        <Unemployment\r\n        isFetching = {unemploymentData.isFetching}\r\n        selectedCountry={selectedCountry}\r\n        unemploymentData = {unemploymentData.data}\r\n        \r\n        />\r\n      </div>\r\n      <br style={{backgroundColor:\"white\"}}></br>\r\n\r\n      <div>\r\n        <Earnings\r\n          netEarningsData={netEarningsData.data}\r\n          selectedCountry={selectedCountry}\r\n          isFetching={netEarningsData.isFetching}\r\n\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashContainer;\r\n\r\n//   interface PropsWithChildren<netEarningsData>{\r\n//     labels: any | undefined;\r\n//     values?: any | undefined;\r\n//     seriesName?: any | undefined;\r\n// }\r\n// interface intrinsicAttributes{\r\n//   netEarningsData: {lables: any, values: any }\r\n// }\r\n\r\n// interface netEarningsData{\r\n//   labels: any | undefined;\r\n//   values?: any | undefined;\r\n//   seriesName?: any | undefined;\r\n// }\r\n","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\ControlPanel.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\services\\URLgenerationFunctions.tsx",[],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Earnings.tsx",["66","67","68","69","70","71","72","73","74"],"import React, { useEffect, useState } from \"react\";\r\nimport { scaleLinear, max, min, mean, select } from \"d3\";\r\nimport Bar from \"../components/graphComponents/Barz\";\r\nimport {\r\n  generateXaxisValues,\r\n  generateYaxisValues,\r\n  chartDimensions,\r\n} from \"../services/graphUtilityFunctions\";\r\n\r\n\r\ninterface EarningsProps {\r\n  children?: any;\r\n  selectedCountry?: string;\r\n  netEarningsData: any;\r\n\r\n  isFetching: boolean;\r\n}\r\n\r\nconst Earnings: React.FC<EarningsProps> = ({\r\n  netEarningsData: netEarningsData,\r\n  selectedCountry,\r\n  isFetching,\r\n}) => {\r\n\r\n  // const chartDimensions={\r\n  //   chartAreaHeight: 400, \r\n  //   chartAreaWidth: 700,\r\n  //   margin: { top: 20, right: 10, bottom:10, left: 40,  },\r\n  //   dataPoints: {centerToCenter: 40, barWidth: 12},\r\n  //   //is there a way to call within the object? \r\n  //   // should be chartAreaHeight - margin.bottom\r\n  //   chartHeightInner : 390\r\n  // }\r\n\r\n\r\n  let labels: Array<any> = [];\r\n  let values_net: Array<number> = [1, 2, 3];\r\n  let yScale_net: any;\r\n  let yAxisValues :Array<number> = [];\r\n  let xAxisLine: any; \r\n  let xAxisText: any; \r\n\r\n\r\n\r\n  let bars: any;\r\n\r\n\r\n  values_net = netEarningsData.values;\r\n  // labels = netEarningsData.labels\r\n  \r\n  if (Array.isArray(values_net)) {\r\n    labels =netEarningsData.labels.map((year: any) => parseInt(year));\r\n    // labels = labels.map((year: any) => parseInt(year));\r\n    // labels =netEarningsData.labels.map((year: any) => parseInt(year));\r\n\r\n  }\r\n\r\n  if (min(labels) < 2005 && Array.isArray(values_net)) {\r\n    const elementsToSlice = 2005 - min(labels);\r\n    labels = labels.slice(elementsToSlice);\r\n    values_net = values_net.slice(elementsToSlice);\r\n  }\r\n\r\n  if (min(labels) > 2005 && Array.isArray(values_net)) {\r\n    const minYear = min(labels);\r\n    const elementsToAdd: number = minYear - 2005;\r\n\r\n    for (let i = 0; i < elementsToAdd; i++) {\r\n      labels.unshift(labels[0] - 1);\r\n      values_net.unshift(0);\r\n    }\r\n\r\n    values_net = values_net.slice(elementsToAdd);\r\n    \r\n  }\r\n\r\n  if(Array.isArray(values_net)){\r\n    values_net = values_net.map((el)=>Math.round(el/1000))\r\n  }\r\n  \r\n\r\n\r\n  if (values_net !== undefined) {\r\n    yScale_net = scaleLinear()\r\n      .domain([min(values_net) as number, max(values_net) as number])\r\n      .range([chartDimensions.margin.bottom, chartDimensions.chartAreaHeight - chartDimensions.margin.top]);\r\n  } else {\r\n    //used as a placeholder when waiting for values to arrive\r\n    yScale_net = scaleLinear().domain([0, 100]).range([5, chartDimensions.chartHeightInner]);\r\n  }\r\n\r\n  const xScale = scaleLinear()\r\n    .domain([min(labels) as number, max(labels) as number])\r\n    .range([chartDimensions.margin.left, chartDimensions.chartAreaWidth]);\r\n\r\n  if (values_net !== undefined) {\r\n    values_net  =values_net.map((el :any)=>Math.round(el))\r\n\r\n    yAxisValues = generateYaxisValues(values_net)\r\n    // yAxisValues = yAxisValues.map((el)=>Math.round(el/1000))\r\n\r\n\r\n\r\n    bars = values_net.map((row: any, ind: number) => (\r\n      <Bar\r\n        x={ind * chartDimensions.dataPoints.centerToCenter + chartDimensions.margin.left}\r\n        y_net={\r\n          values_net === undefined || values_net.length === 0\r\n            ? 0\r\n            : chartDimensions.chartHeightInner - yScale_net(values_net[ind])-10\r\n        }\r\n        barWidth={chartDimensions.dataPoints.barWidth}\r\n        barHeight_net={\r\n          values_net === undefined || values_net.length === 0\r\n            ? 0\r\n            : yScale_net(values_net[ind])\r\n        }\r\n        yValue={0}\r\n        key={ind}\r\n        yearLabel={labels[ind]}\r\n        yearLableYPoz={chartDimensions.chartHeightInner + chartDimensions.margin.bottom}\r\n      />\r\n    ));\r\n  }\r\n\r\n  // xAxisLine=(\r\n\r\n  // )\r\n\r\n  // xAxisText= (\r\n\r\n  // )\r\n\r\n  return (\r\n    <>\r\n      {/* <div>{JSON.stringify(netEarningsData)}</div> */}\r\n\r\n      {/* <div>{`${selectedCountry} Net Earnings`}</div> */}\r\n\r\n      <div style={{ backgroundColor: \"grey\", height: 400, width: 700 }}>\r\n        <svg width={chartDimensions.chartAreaWidth} height={chartDimensions.chartAreaHeight}>\r\n          {yAxisValues.map(el=>(\r\n            <text key={`yaxis ${el}`} x={5} y={chartDimensions.chartAreaHeight-yScale_net(el)}>{el}</text>\r\n          ))}\r\n          <line\r\n            id=\"xAxis\"\r\n            x1={chartDimensions.margin.left}\r\n            y1={chartDimensions.chartHeightInner - chartDimensions.margin.bottom}\r\n            x2={chartDimensions.chartAreaWidth - chartDimensions.margin.right}\r\n            y2={chartDimensions.chartHeightInner - chartDimensions.margin.bottom}\r\n            stroke=\"black\"\r\n          />\r\n\r\n          {bars}\r\n        </svg>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Earnings;\r\n","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Vacancies.tsx",["75","76","77","78","79","80","81","82","83"],"import React, { useEffect, useState } from \"react\";\r\nimport { scaleLinear, max, min, mean, select } from \"d3\";\r\nimport { create } from \"domain\";\r\n\r\n\r\ninterface VacancyProps{\r\n\r\n    selectedCountry?: string;\r\n    vacancyData: any;\r\n    isFetching: boolean;\r\n}\r\n\r\n\r\n\r\n\r\nconst Vacancies: React.FC<VacancyProps>=({\r\n    vacancyData: vacancyData, \r\n    selectedCountry, \r\n    isFetching\r\n\r\n\r\n}) =>{\r\n\r\n    return  <div>{JSON.stringify(vacancyData)}</div>\r\n}\r\n\r\n\r\nexport default Vacancies",["84","85"],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\Unemployment.tsx",["86","87","88","89","90","91","92","93","94","95"],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Dotz.tsx",["96","97","98","99","100","101","102","103","104"],"import React, { useEffect, useState } from \"react\";\r\nimport { scaleLinear, max, min, line, mean, select } from \"d3\";\r\n\r\ninterface DotzProps {\r\n  values_unemp: number[];\r\n  values_unempScaled: number[];\r\n  yearLabelYPoz: number;\r\n  labels: Array<any>;\r\n  centerToCenter: number;\r\n  marginLeft: number;\r\n}\r\n\r\nconst Dotz: React.FC<DotzProps> = ({\r\n  values_unemp,\r\n  values_unempScaled,\r\n  yearLabelYPoz,\r\n  labels,\r\n  centerToCenter,\r\n  marginLeft,\r\n}) => {\r\n  const xScale = function (index: number) {\r\n    return index * centerToCenter + marginLeft;\r\n  };\r\n\r\n  const dotRef: any = React.createRef();\r\n\r\n  const dots = values_unempScaled.map((row: any, ind: number) => (\r\n    <Dot\r\n      key={Math.random()}\r\n      x={xScale(ind)}\r\n      //use for tooltip later\r\n      y_unemp={values_unemp[ind]}\r\n      dotHeight={row}\r\n      yValue={0}\r\n      yearLabel={labels[ind].getFullYear()}\r\n      yearLableYPoz={yearLabelYPoz}\r\n      renderYear={ind % 4 === 0 ? true : false}\r\n    />\r\n  ));\r\n\r\n  return <g>{dots}</g>;\r\n};\r\n\r\ninterface DotProps {\r\n  x: number;\r\n  y_unemp: number;\r\n  dotHeight: number;\r\n  yValue: number;\r\n  yearLabel: any;\r\n  yearLableYPoz: number;\r\n  renderYear: boolean;\r\n}\r\n\r\nconst Dot: React.FC<DotProps> = ({\r\n  x,\r\n  y_unemp,\r\n  dotHeight,\r\n  yValue,\r\n  yearLabel,\r\n  yearLableYPoz,\r\n  renderYear,\r\n}) => {\r\n  const dotRef: any = React.createRef();\r\n\r\n  // useEffect(() => {\r\n  //   animtaeDots(dotRef, dotHeight, x);\r\n  // },);\r\n\r\n  return (\r\n    <g>\r\n\r\n      {/* <filter id={`dot_${x}_filter`}> */}\r\n      <filter id={`dot_filter`}>\r\n        <feFlood  floodOpacity=\"0.3\"  />\r\n      </filter>\r\n\r\n      {/* <circle fill=\"black\" ref={dotRef} r={3}  cx={x} cy={dotHeight} style={{filter: url(`#dot_filter`)}} ></circle> */}\r\n      {/* <circle fill=\"black\" ref={dotRef} r={3}  cx={x} cy={dotHeight} style={{filter:`#dot_filter`}} ></circle> */}\r\n      <circle fill=\"black\" ref={dotRef} r={3}  cx={x} cy={dotHeight} fillOpacity=\"0.5\" ></circle>\r\n      {/* {renderYear ? (\r\n        <text x={x} y={yearLableYPoz}>\r\n          {yearLabel}\r\n        </text>\r\n      ) : (\r\n        <></>\r\n      )} */}\r\n    </g>\r\n  );\r\n};\r\n\r\nconst animtaeDots = (dotRef: any, dotHeight: number, x: number) => {\r\n  const dot = select(dotRef.current);\r\n\r\n  dot.transition().duration(1000).attr(\"cy\", dotHeight).attr(\"cx\", x);\r\n};\r\n\r\nexport default Dotz;\r\n","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Line.tsx",["105","106","107","108","109","110","111"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    scaleLinear,\r\n    max,\r\n    min,\r\n    line,\r\n    mean,\r\n    select,\r\n  } from \"d3\";\r\n\r\n\r\n  interface LineProps {\r\n    xScale: any; \r\n    yScale: any;\r\n    values_unemp: any;\r\n  }\r\n\r\n  \r\n  const Linez: any = (values_unempScaled: any, labelsScaled: any, xScale: any) => {\r\n    const [lineValues, setLineValues] = useState([1, 2, 3]);\r\n  \r\n    const lineRef: any = React.createRef();\r\n  \r\n    values_unempScaled = values_unempScaled.values_unempScaled;\r\n\r\n  \r\n    labelsScaled = labelsScaled.lablesScaled;\r\n  \r\n    useEffect(() => {\r\n      if (values_unempScaled.length > 1) {\r\n        setLineValues(values_unempScaled);\r\n  \r\n        const currentLine = select(lineRef.current);\r\n        animateLine(currentLine, xScale, values_unempScaled);\r\n      }\r\n    },[values_unempScaled]);\r\n  \r\n    return (\r\n      <g>\r\n        <path ref={lineRef} />\r\n      </g>\r\n    );\r\n  };\r\n  \r\n  const animateLine = (\r\n    currentLine: any,\r\n    xScale: any,\r\n    values_unempScaled: Array<number>\r\n  ) => {\r\n  \r\n  \r\n    if (Array.isArray(values_unempScaled)) {\r\n      const drawLine = line()\r\n        .x((d: any, i: any) => i * 10 + 50)\r\n        //Passing function does not work :(\r\n        // .x((d: any, i: any) => xScale(i))\r\n        .y((d: any) => d);\r\n  \r\n      const linePath = drawLine(values_unempScaled as Array<number> | any);\r\n  \r\n      currentLine\r\n        .transition()\r\n        .duration(1000)\r\n        .attr(\"d\", linePath)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", \"black\");\r\n    }\r\n  };\r\n\r\n  export default Linez\r\n","C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\services\\graphUtilityFunctions.tsx",["112","113","114","115"],"C:\\Users\\Admin\\Documents\\js\\react\\euro-labor-dash\\euro-labor-dash\\src\\components\\graphComponents\\Barz.tsx",["116","117"],"import React, { useEffect, useState } from \"react\";\r\nimport {select} from \"d3\";\r\n\r\ninterface BarProps {\r\n    x: number;\r\n    y_net: number;\r\n    barWidth: number;\r\n    barHeight_net: number;\r\n    yValue: number;\r\n    yearLabel: any;\r\n    yearLableYPoz: number;\r\n  }\r\n\r\n\r\nconst Bar: React.FC<BarProps> = ({\r\n    x,\r\n    y_net,\r\n    barWidth,\r\n    barHeight_net,\r\n    yValue,\r\n    yearLabel,\r\n    yearLableYPoz,\r\n  }) => {\r\n    if (isNaN(y_net)) {\r\n      y_net = 0;\r\n    }\r\n  \r\n    const axisText: number = 125;\r\n    const rectRef: any = React.createRef();\r\n  \r\n    useEffect(() => {\r\n      animateBars(rectRef, y_net, barHeight_net);\r\n    });\r\n  \r\n    return (\r\n      <g>\r\n        <rect ref={rectRef} x={x} width={barWidth} fill=\"black\" />\r\n        <text\r\n          x={x}\r\n          y={yearLableYPoz}\r\n          // style={{transform:'rotate(1deg)'}}\r\n        >\r\n          {yearLabel}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n\r\n  \r\nconst animateBars = (rectRef: any, y_net: number, barHeight_net: number) => {\r\n    const rect = select(rectRef.current);\r\n  \r\n    rect\r\n  \r\n      .transition()\r\n      .duration(1000)\r\n      .attr(\"height\", barHeight_net)\r\n      .attr(\"y\", y_net);\r\n  };\r\n\r\nexport default Bar",{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":110,"column":6,"nodeType":"124","endLine":110,"endColumn":23,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":123,"column":9,"nodeType":"128","messageId":"129","endLine":123,"endColumn":12},{"ruleId":"130","severity":1,"message":"131","line":1,"column":17,"nodeType":"128","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"133","line":1,"column":28,"nodeType":"128","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"134","line":2,"column":33,"nodeType":"128","messageId":"132","endLine":2,"endColumn":37},{"ruleId":"130","severity":1,"message":"135","line":2,"column":39,"nodeType":"128","messageId":"132","endLine":2,"endColumn":45},{"ruleId":"130","severity":1,"message":"136","line":5,"column":3,"nodeType":"128","messageId":"132","endLine":5,"endColumn":22},{"ruleId":"137","severity":1,"message":"138","line":20,"column":3,"nodeType":"139","messageId":"140","endLine":20,"endColumn":35,"fix":"141"},{"ruleId":"130","severity":1,"message":"142","line":40,"column":7,"nodeType":"128","messageId":"132","endLine":40,"endColumn":21},{"ruleId":"130","severity":1,"message":"143","line":41,"column":7,"nodeType":"128","messageId":"132","endLine":41,"endColumn":21},{"ruleId":"130","severity":1,"message":"144","line":92,"column":9,"nodeType":"128","messageId":"132","endLine":92,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":1,"column":17,"nodeType":"128","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"133","line":1,"column":28,"nodeType":"128","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"145","line":2,"column":10,"nodeType":"128","messageId":"132","endLine":2,"endColumn":21},{"ruleId":"130","severity":1,"message":"146","line":2,"column":23,"nodeType":"128","messageId":"132","endLine":2,"endColumn":26},{"ruleId":"130","severity":1,"message":"147","line":2,"column":28,"nodeType":"128","messageId":"132","endLine":2,"endColumn":31},{"ruleId":"130","severity":1,"message":"134","line":2,"column":33,"nodeType":"128","messageId":"132","endLine":2,"endColumn":37},{"ruleId":"130","severity":1,"message":"135","line":2,"column":39,"nodeType":"128","messageId":"132","endLine":2,"endColumn":45},{"ruleId":"130","severity":1,"message":"148","line":3,"column":10,"nodeType":"128","messageId":"132","endLine":3,"endColumn":16},{"ruleId":"137","severity":1,"message":"149","line":17,"column":5,"nodeType":"139","messageId":"140","endLine":17,"endColumn":29,"fix":"150"},{"ruleId":"118","replacedBy":"151"},{"ruleId":"120","replacedBy":"152"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":17,"nodeType":"128","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"133","line":1,"column":28,"nodeType":"128","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"145","line":4,"column":10,"nodeType":"128","messageId":"132","endLine":4,"endColumn":21},{"ruleId":"130","severity":1,"message":"146","line":4,"column":23,"nodeType":"128","messageId":"132","endLine":4,"endColumn":26},{"ruleId":"130","severity":1,"message":"147","line":4,"column":28,"nodeType":"128","messageId":"132","endLine":4,"endColumn":31},{"ruleId":"130","severity":1,"message":"134","line":4,"column":39,"nodeType":"128","messageId":"132","endLine":4,"endColumn":43},{"ruleId":"130","severity":1,"message":"135","line":4,"column":45,"nodeType":"128","messageId":"132","endLine":4,"endColumn":51},{"ruleId":"137","severity":1,"message":"153","line":23,"column":3,"nodeType":"139","messageId":"140","endLine":23,"endColumn":37,"fix":"154"},{"ruleId":"130","severity":1,"message":"155","line":31,"column":7,"nodeType":"128","messageId":"132","endLine":31,"endColumn":18},{"ruleId":"130","severity":1,"message":"156","line":32,"column":7,"nodeType":"128","messageId":"132","endLine":32,"endColumn":18},{"ruleId":"130","severity":1,"message":"131","line":1,"column":17,"nodeType":"128","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"133","line":1,"column":28,"nodeType":"128","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"145","line":2,"column":10,"nodeType":"128","messageId":"132","endLine":2,"endColumn":21},{"ruleId":"130","severity":1,"message":"146","line":2,"column":23,"nodeType":"128","messageId":"132","endLine":2,"endColumn":26},{"ruleId":"130","severity":1,"message":"147","line":2,"column":28,"nodeType":"128","messageId":"132","endLine":2,"endColumn":31},{"ruleId":"130","severity":1,"message":"157","line":2,"column":33,"nodeType":"128","messageId":"132","endLine":2,"endColumn":37},{"ruleId":"130","severity":1,"message":"134","line":2,"column":39,"nodeType":"128","messageId":"132","endLine":2,"endColumn":43},{"ruleId":"130","severity":1,"message":"158","line":25,"column":9,"nodeType":"128","messageId":"132","endLine":25,"endColumn":20},{"ruleId":"130","severity":1,"message":"159","line":91,"column":7,"nodeType":"128","messageId":"132","endLine":91,"endColumn":18},{"ruleId":"130","severity":1,"message":"145","line":3,"column":5,"nodeType":"128","messageId":"132","endLine":3,"endColumn":16},{"ruleId":"130","severity":1,"message":"146","line":4,"column":5,"nodeType":"128","messageId":"132","endLine":4,"endColumn":8},{"ruleId":"130","severity":1,"message":"147","line":5,"column":5,"nodeType":"128","messageId":"132","endLine":5,"endColumn":8},{"ruleId":"130","severity":1,"message":"134","line":7,"column":5,"nodeType":"128","messageId":"132","endLine":7,"endColumn":9},{"ruleId":"130","severity":1,"message":"160","line":12,"column":13,"nodeType":"128","messageId":"132","endLine":12,"endColumn":22},{"ruleId":"130","severity":1,"message":"161","line":20,"column":12,"nodeType":"128","messageId":"132","endLine":20,"endColumn":22},{"ruleId":"122","severity":1,"message":"162","line":36,"column":7,"nodeType":"124","endLine":36,"endColumn":27,"suggestions":"163"},{"ruleId":"130","severity":1,"message":"164","line":1,"column":8,"nodeType":"128","messageId":"132","endLine":1,"endColumn":13},{"ruleId":"130","severity":1,"message":"131","line":1,"column":17,"nodeType":"128","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"133","line":1,"column":28,"nodeType":"128","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"165","severity":1,"message":"166","line":20,"column":49,"nodeType":"167","messageId":"168","endLine":20,"endColumn":51},{"ruleId":"130","severity":1,"message":"133","line":1,"column":28,"nodeType":"128","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"169","line":28,"column":11,"nodeType":"128","messageId":"132","endLine":28,"endColumn":27},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchData_net' and 'fetchData_unemployemnt'. Either include them or remove the dependency array.","ArrayExpression",["172"],"@typescript-eslint/no-redeclare","'rez' is already defined.","Identifier","redeclared","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","unusedVar","'useState' is defined but never used.","'mean' is defined but never used.","'select' is defined but never used.","'generateXaxisValues' is defined but never used.","no-useless-rename","Destructuring assignment netEarningsData unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"173","text":"174"},"'xAxisLine' is defined but never used.","'xAxisText' is defined but never used.","'xScale' is assigned a value but never used.","'scaleLinear' is defined but never used.","'max' is defined but never used.","'min' is defined but never used.","'create' is defined but never used.","Destructuring assignment vacancyData unnecessarily renamed.",{"range":"175","text":"176"},["170"],["171"],"Destructuring assignment unemploymentData unnecessarily renamed.",{"range":"177","text":"178"},"'yScale' is defined but never used.","'xScale' is defined but never used.","'line' is defined but never used.","'dotRef' is assigned a value but never used.","'animtaeDots' is assigned a value but never used.","'LineProps' is defined but never used.","'lineValues' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'lineRef' and 'xScale'. Either include them or remove the dependency array.",["179"],"'React' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axisText' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},[473,505],"netEarningsData",[316,340],"vacancyData",[597,631],"unemploymentData",{"desc":"182","fix":"183"},"Update the dependencies array to be: [fetchData_net, fetchData_unemployemnt, selectedCountry]",{"range":"184","text":"185"},"Update the dependencies array to be: [lineRef, values_unempScaled, xScale]",{"range":"186","text":"187"},[2708,2725],"[fetchData_net, fetchData_unemployemnt, selectedCountry]",[822,842],"[lineRef, values_unempScaled, xScale]"]